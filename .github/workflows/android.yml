name: Android CI (APK)

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      PROJECT_DIR: .   # muda se o módulo "app" estiver noutra pasta
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3
        with:
          # tudo numa linha, separado por espaços
          packages: platform-tools platforms;android-34 build-tools;34.0.0

      - name: Set up Gradle (sem wrapper)
        uses: gradle/actions/setup-gradle@v3
        with:
          gradle-version: 8.7

      - name: Build Debug APK
        working-directory: ${{ env.PROJECT_DIR }}
        run: gradle --no-daemon assembleDebug

      - name: Upload APK (debug)
        uses: actions/upload-artifact@v4
        with:
          name: app-debug-apk
          path: ${{ env.PROJECT_DIR }}/app/build/outputs/apk/debug/app-debug.apk

      - name: Build Release APK (opcional, assinado se tiveres keystore)
        working-directory: ${{ env.PROJECT_DIR }}
        env:
          STORE_FILE: ${{ secrets.STORE_FILE }}   # conteúdo base64 do keystore.jks
          STORE_PASSWORD: ${{ secrets.STORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
        run: |
          if [ -n "${STORE_FILE}" ]; then
            echo "${STORE_FILE}" | base64 -d > keystore.jks
          fi
          gradle --no-daemon assembleRelease || true

      - name: Upload APK (release se existir)
        uses: actions/upload-artifact@v4
        with:
          name: app-release-apk
          path: ${{ env.PROJECT_DIR }}/app/build/outputs/apk/release/app-release.apk
          if-no-files-found: ignore
